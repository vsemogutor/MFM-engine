<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="400" borderStyle="solid" 
	borderColor="#000000" backgroundColor="#FFFFFF" creationComplete="{init()}">
	
	<mx:VBox width="100%">
		<mx:Label text="Items:" fontWeight="bold"></mx:Label>
		<mx:List id="lstItems" labelField="name" width="100%" height="200"></mx:List>
		<mx:Button label="Remove" click="onRemove(event)">
		</mx:Button>
		
		<mx:Label text="Avaliable Items:" fontWeight="bold"></mx:Label>
		<mx:List id="lstAvaliableItems" labelField="name" width="100%" height="200"></mx:List>
		<mx:Button label="Add" click="onAdd(event)">
		</mx:Button>
		
		<mx:HBox horizontalAlign="center" width="100%">
			<mx:Button label="OK" click="onOkClick(event)"></mx:Button>		
		</mx:HBox>
	</mx:VBox>
		
	<mx:Script>
		<![CDATA[
			import engine.items.InventoryItem;
			import engine.game.Game;
			import engine.units.Unit;
			import com.greensock.OverwriteManager;
			import engine.util.VectorCollection;
			import engine.mission.Mission;
			import engine.mission.IMissionPack;
			import mx.managers.PopUpManager;
			
			private var _closeHandler:Function;
			private var _unit:Unit;
			
			public function showDialog(parent:DisplayObject, unit:Unit, closeHandler:Function):void
			{
				_unit = unit;
				_closeHandler = closeHandler;
				
				PopUpManager.addPopUp(this, parent, true);
				PopUpManager.centerPopUp(this);
				isPopUp = true; // prevent draggable behaviour
			}
			
			private function init():void
			{
				lstItems.dataProvider = new VectorCollection(_unit.items);
				lstAvaliableItems.dataProvider = Game.instance().inventoryItemManager.itemTypes.toValSet().toArray().sortOn("name");
				
				validateNow();
			}
			
			public function onOkClick(evt:Event):void
			{
				PopUpManager.removePopUp(this);
			}
			
			public function onAdd(evt:Event):void
			{
				if (lstAvaliableItems.selectedItem)
				{
					_unit.addItem(InventoryItem(lstAvaliableItems.selectedItem).clone());
					lstItems.dataProvider = new VectorCollection(_unit.items);
					validateNow();
				}
			}
			
			public function onRemove(evt:Event):void
			{
				if (lstItems.selectedItem)
				{
					_unit.removeItem(InventoryItem(lstItems.selectedItem));
					lstItems.dataProvider = new VectorCollection(_unit.items);
					validateNow();
				}
			}
		]]>
	</mx:Script>
</mx:Canvas>
