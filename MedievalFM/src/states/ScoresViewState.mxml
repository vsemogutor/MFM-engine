<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:cc="controls.*" layout="absolute"  
	width="100%" height="100%"
	styleName="startMenu" creationComplete="{init()}" addedToStage="{init()}">

	<mx:DropShadowFilter id="shadow" angle="0" distance="1">
	</mx:DropShadowFilter>
		
	<mx:VBox width="100%" y="100" horizontalAlign="center">
		<mx:Label styleName="headerGold" text="{StringResources.get('HallOfFame')}" filters="{[shadow]}">
		</mx:Label>			
	</mx:VBox>
			
	<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="bottom" paddingBottom="20">	
		<mx:Canvas width="85%" height="70%">
			<mx:Canvas width="100%" height="100%" styleName="paperBorder" alpha="0.9"></mx:Canvas>
			<mx:VBox width="100%" height="100%"  verticalGap="1" paddingTop="50" horizontalAlign="center" paddingBottom="10">				
				<mx:VBox id="pnlLoading" width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
					<mx:Text text="Loading..." selectable="false"></mx:Text>
				</mx:VBox>
				<mx:Repeater id="scoresList">
					<mx:HBox styleName="boxGold" filters="{[shadow]}" paddingTop="4" paddingBottom="4" width="70%">
						<mx:Label styleName="labelWhite11" text="{scoresList.currentItem.Name}"></mx:Label>
						<mx:Spacer width="100%"></mx:Spacer>
						<mx:Label styleName="labelGold11" text="{scoresList.currentItem.Points}"></mx:Label>
					</mx:HBox>	
				</mx:Repeater>		
				<mx:Spacer height="100%"></mx:Spacer>
				<cc:ClickButton styleName="mainMenuButton" width="70" label="Ok" click="onBackClick(event)">
				</cc:ClickButton>					
			</mx:VBox>		
		</mx:Canvas>
	</mx:VBox>
	
	<mx:Script>
		<![CDATA[
			import engine.scores.PlayerScoreProvider;
			import resources.StringResources;
			import mx.core.Application;
			import mx.effects.easing.Linear;
			
			private function init():void
			{
				if (!this.processedDescriptors)
					return;
					
				pnlLoading.visible = true;
				pnlLoading.includeInLayout = true;
				scoresList.visible = false;
				scoresList.includeInLayout = false;
				PlayerScoreProvider.getScoresAsync(onGetScores);
			}
			
			private function onGetScores(scores:Array, numscores:int, response:Object):void
			{
			    if(response.Success)
			    {
			        trace(scores.length + " scores returned out of " + numscores);
			        pnlLoading.visible = false;
			        pnlLoading.includeInLayout = false;
			        scoresList.visible = true;
					scoresList.includeInLayout = true;
					scoresList.dataProvider = scores;
			    }
			}
			
			private function onBackClick(event:Event):void
			{
				Application.application.currentState = UIGameState.START_MENU;
			}
		]]>
	</mx:Script>
		
</mx:Module>
