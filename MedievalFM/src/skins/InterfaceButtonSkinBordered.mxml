<?xml version="1.0" encoding="utf-8"?>
<mx:UIComponent xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="init()">
	
	<mx:Script>
		<![CDATA[
        import computers.utils.Utils;

        import engine.util.StrUtil;
        import engine.util.Util;

        import flash.display.GradientType;
        import flash.filters.BevelFilter;
        import flash.filters.BitmapFilterType;
        import flash.geom.Matrix;

        import mx.controls.Button;
        import mx.core.UITextField;
        import mx.events.FlexEvent;
        import mx.skins.ProgrammaticSkin;


        private const PUSH_OFFSET:int = 2;
        private var cornerRadius:Number;
        private var text:UITextField;
        private var backgroundAlpha:Number;

        [Bindable]
        public var topOffset:int = 0;
        [Bindable]
        public var leftOffset:int = 0;
        [Bindable]
        public var backgroundFillColor1:uint;
        [Bindable]
        public var backgroundFillColor2:uint;

        private function init():void {
            cornerRadius = getStyle("cornerRadius");
            backgroundAlpha = getStyle("backgroundAlpha");
        }

        protected override function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
            super.updateDisplayList(unscaledWidth, unscaledHeight);

            graphics.clear();

            if (topOffset) {
                graphics.beginFill(0x000010, 0.7);
                drawRoundRect(2, 2, unscaledWidth - 4, unscaledHeight - 4, {tl: 1, tr: 1, bl: 1, br: 1})
                graphics.endFill();
            }

            var selBackgroundAlpha:Number = backgroundAlpha;
            if (currentState == "over" || StrUtil.startsWith(currentState, "selected"))
                selBackgroundAlpha = 1;

            var matrix:Matrix = new Matrix();
            matrix.createGradientBox(unscaledWidth - 4, unscaledHeight - 4, 0, 2 + leftOffset, 2 + topOffset);
            graphics.lineStyle(1, 0xFFFFFF);
            graphics.beginGradientFill(GradientType.RADIAL, [backgroundFillColor1, backgroundFillColor2],
                    [selBackgroundAlpha, backgroundAlpha],
                    [77, 255], matrix);
            drawRoundRect(2 + leftOffset, 2 + topOffset, unscaledWidth - 4 - topOffset, unscaledHeight - 3 - leftOffset, {tl: 1, tr: 1, bl: 1, br: 1})
            graphics.endFill();

            graphics.lineStyle(2);
            matrix.createGradientBox(unscaledWidth, unscaledHeight, 90 / Utils.DEGREE_PER_RAD, 0, 0);
            graphics.lineGradientStyle(GradientType.LINEAR, [0xFFFF52, 0x5A3400, 0x5A3400], [1, 1, 1], [10, 10, 255], matrix);
            drawRoundRect(0, 0, unscaledWidth, unscaledHeight, {tl: cornerRadius, tr: cornerRadius, bl: cornerRadius, br: cornerRadius});

            var textField:UITextField = getTextField();
            if (textField) {
                textField.y += topOffset;
                textField.x += leftOffset;
            }
        }

        private function getTextField():UITextField {
            if (text)
                return text;

            for (var i:int = 0; i < parent.numChildren; ++i) {
                var child:UITextField = parent.getChildAt(i) as UITextField;
                if (child) {
                    text = child;
                    break;
                }
            }

            return text;
        }
        ]]>
	</mx:Script>
	
	<mx:states>
		<mx:State name="up" enterState="invalidateDisplayList()">
			<mx:SetProperty target="{this}" name="backgroundFillColor1" value="{0x10107B}"/>
			<mx:SetProperty target="{this}" name="backgroundFillColor2" value="{0x000037}"/>			
	    </mx:State>
	    <mx:State name="over" enterState="invalidateDisplayList()">
	    	<mx:SetProperty target="{this}" name="backgroundFillColor1" value="{0x294DD9}"/>
			<mx:SetProperty target="{this}" name="backgroundFillColor2" value="{0x101842}"/>
	    </mx:State>
	    <mx:State name="down" enterState="invalidateDisplayList()"> 
			<mx:SetProperty target="{this}" name="top" value="{PUSH_OFFSET}"/>
			<mx:SetProperty target="{this}" name="left" value="{PUSH_OFFSET}"/>
			<mx:SetProperty target="{this}" name="backgroundFillColor1" value="{0x000010}"/>
			<mx:SetProperty target="{this}" name="backgroundFillColor2" value="{0x000010}"/>
	    </mx:State>
	    <mx:State name="disabled" enterState="invalidateDisplayList()">
	    	<mx:SetProperty target="{this}" name="backgroundFillColor1" value="{0x313831}"/>
			<mx:SetProperty target="{this}" name="backgroundFillColor2" value="{0x101010}"/>
	    </mx:State>
	    <mx:State name="selectedDisabled" basedOn="disabled">
	    </mx:State>
	    
	    <mx:State name="selectedUp" basedOn="over">
	    </mx:State>
	    <mx:State name="selectedOver" basedOn="over">
	    </mx:State>
	    <mx:State name="selectedDown" basedOn="down">
	    </mx:State>
	</mx:states>
    
</mx:UIComponent>
