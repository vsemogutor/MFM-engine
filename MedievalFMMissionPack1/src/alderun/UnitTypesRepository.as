package alderun
{
	import engine.animation.UnitSprite;
	import engine.fraction.ResourceType;
	import engine.game.Game;
	import engine.heros.HeroProperties;
	import engine.projectile.ProjectileBehaviour;
	import engine.units.ArmorType;
	import engine.units.DamageType;
	import engine.units.UnitProperties;
	import engine.units.UnitType;
	import engine.units.UnitTypes;
	import engine.units.upgrade.*;
	import engine.util.Util;
	
	import mx.core.BitmapAsset;
	
	import resources.BitmapResources;
	import resources.SoundResources;
	
	public class UnitTypesRepository
	{
		public var HeroPaladin:UnitType;		
		public var HeroMage:UnitType;		
		public var HeroLich:UnitType;
		public var HeroBarbar:UnitType;
		
		public var WeaponsMerchant:UnitType;
		public var Merchant:UnitType;

		public var FountainofLife:UnitType;
						
		public var SkeletonDrain:UnitType;
		public var Nexus:UnitType;
		public var Barracks:UnitType;
		public var AncientProtector:UnitType;
		public var WatchTower:UnitType;
		public var Skeleton:UnitType;
		public var SkeletonSwordsman:UnitType;

		public var ElementalTower:UnitType;
		public var MagicTower:UnitType;
		public var Fotress:UnitType;
		public var PillarofFrozenLight:UnitType;
		public var Totem:UnitType;
		public var ArcaneTower:UnitType;
		public var MagicTotem:UnitType;
		public var IceElemental:UnitType;
		public var TotemLvl2:UnitType;
		public var SkeletonKing:UnitType;

		public var Spider:UnitType;		
		public var Wolf:UnitType;		
		public var LizardMan:UnitType;
		public var Zombie:UnitType;
										
		public function init(game:Game, typesRepository:TypesRepository):void 
		{
			Spider = new UnitType(true);
			Spider.model = game.spriteRepository.getByName("UnitPhaseSpider") as UnitSprite;
			Spider.name = "Spider";
			Spider.id = 2625;
			Spider.description = "Undead. High magic resistance. Regenerates.";
			Spider.type = UnitTypes.Unit;
			Spider.xLength = 1;
			Spider.yLength = 1;
			Spider.isUpgrade = false;
			Spider.isFlying = false;
			Spider.isTrader = false;
			Spider.constructionTime = 1;
			Spider.properties[UnitProperties.Armor] = 2;
			Spider.properties[UnitProperties.ArmorType] = ArmorType.NORMAL;
			Spider.properties[UnitProperties.AttackDelay] = Util.secToFrames(1.9);
			Spider.properties[UnitProperties.AttackDmgMax] = 6;
			Spider.properties[UnitProperties.AttackDmgMin] = 7;
			Spider.properties[UnitProperties.AttackDmgType] = DamageType.Piersing;
			Spider.properties[UnitProperties.AttackRange] = 2;
			Spider.properties[UnitProperties.AttackSpeed] = Util.secToFrames(1);
			Spider.properties[UnitProperties.AttackSpell] = 0;
			Spider.properties[UnitProperties.AttackVisualEffectId] = 0;
			Spider.properties[UnitProperties.CastDelay] = 48;
			Spider.properties[UnitProperties.CastSpeed] = 12;
			Spider.properties[UnitProperties.HealthRegenRate] = 24;
			Spider.properties[UnitProperties.HealthRegen] = 3;
			Spider.properties[UnitProperties.IsMechanical] = 0;
			Spider.properties[UnitProperties.MaxHealth] = 60;
			Spider.properties[UnitProperties.MoveSpeed] = 60;
			Spider.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			Spider.properties[UnitProperties.ProjectileModelId] = 809186;
			Spider.properties[UnitProperties.ProjectileSpeed] = 4;
			Spider.properties[UnitProperties.SightRange] = 3;
			Spider.properties[UnitProperties.AttackDamageRange] = 0;
			Spider.bountyResources[ResourceType.Gold] = 70;
			Spider.properties[UnitProperties.HealthRegenRate] = Util.secToFrames(4);		
			Spider.properties[UnitProperties.HealthRegen] = 1;
			Spider.soundPack.attack = SoundResources.spit1;
			Spider.soundPack.hit = SoundResources.hitWeb;
			Spider.icon = new BitmapAsset(BitmapResources.icoGiantSpider.bitmapData);
			game.unitManager.addUnitType(Spider);

			Wolf = new UnitType(true);
			Wolf.model = game.spriteRepository.getByName("UnitPhaseSpider") as UnitSprite;
			Wolf.name = "Wolf";
			Wolf.id = 26251;
			Wolf.description = "";
			Wolf.type = UnitTypes.Unit;
			Wolf.xLength = 1;
			Wolf.yLength = 1;
			Wolf.isUpgrade = false;
			Wolf.isFlying = false;
			Wolf.isTrader = false;
			Wolf.constructionTime = 1;
			Wolf.properties[UnitProperties.Armor] = 2;
			Wolf.properties[UnitProperties.ArmorType] = ArmorType.NORMAL;
			Wolf.properties[UnitProperties.AttackDelay] = Util.secToFrames(1.9);
			Wolf.properties[UnitProperties.AttackDmgMax] = 7;
			Wolf.properties[UnitProperties.AttackDmgMin] = 8;
			Wolf.properties[UnitProperties.AttackDmgType] = DamageType.Piersing;
			Wolf.properties[UnitProperties.AttackRange] = 1;
			Wolf.properties[UnitProperties.AttackSpeed] = Util.secToFrames(1);
			Wolf.properties[UnitProperties.AttackSpell] = 0;
			Wolf.properties[UnitProperties.AttackVisualEffectId] = 0;
			Wolf.properties[UnitProperties.CastDelay] = 48;
			Wolf.properties[UnitProperties.CastSpeed] = 12;
			Wolf.properties[UnitProperties.HealthRegenRate] = 24;
			Wolf.properties[UnitProperties.HealthRegen] = 3;
			Wolf.properties[UnitProperties.IsMechanical] = 0;
			Wolf.properties[UnitProperties.MaxHealth] = 90;
			Wolf.properties[UnitProperties.MoveSpeed] = 40;
			Wolf.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			Wolf.properties[UnitProperties.ProjectileModelId] = 809186;
			Wolf.properties[UnitProperties.ProjectileSpeed] = 4;
			Wolf.properties[UnitProperties.SightRange] = 3;
			Wolf.properties[UnitProperties.AttackDamageRange] = 0;
			Wolf.bountyResources[ResourceType.Gold] = 70;
			Wolf.properties[UnitProperties.HealthRegenRate] = Util.secToFrames(4);		
			Wolf.properties[UnitProperties.HealthRegen] = 1;
			Wolf.soundPack.attack = SoundResources.spit1;
			Wolf.soundPack.hit = SoundResources.hitWeb;
			Wolf.icon = new BitmapAsset(BitmapResources.icoGiantSpider.bitmapData);
			game.unitManager.addUnitType(Wolf);

			LizardMan = new UnitType(true);
			LizardMan.model = game.spriteRepository.getByName("UnitPhaseSpider") as UnitSprite;
			LizardMan.name = "Lizardman";
			LizardMan.id = 262511;
			LizardMan.description = "";
			LizardMan.type = UnitTypes.Unit;
			LizardMan.xLength = 1;
			LizardMan.yLength = 1;
			LizardMan.isUpgrade = false;
			LizardMan.isFlying = false;
			LizardMan.isTrader = false;
			LizardMan.constructionTime = 1;
			LizardMan.properties[UnitProperties.Armor] = 2;
			LizardMan.properties[UnitProperties.ArmorType] = ArmorType.NORMAL;
			LizardMan.properties[UnitProperties.AttackDelay] = Util.secToFrames(1.9);
			LizardMan.properties[UnitProperties.AttackDmgMax] = 8;
			LizardMan.properties[UnitProperties.AttackDmgMin] = 9;
			LizardMan.properties[UnitProperties.AttackDmgType] = DamageType.Piersing;
			LizardMan.properties[UnitProperties.AttackRange] = 1;
			LizardMan.properties[UnitProperties.AttackSpeed] = Util.secToFrames(1);
			LizardMan.properties[UnitProperties.AttackSpell] = 0;
			LizardMan.properties[UnitProperties.AttackVisualEffectId] = 0;
			LizardMan.properties[UnitProperties.CastDelay] = 48;
			LizardMan.properties[UnitProperties.CastSpeed] = 12;
			LizardMan.properties[UnitProperties.HealthRegenRate] = 24;
			LizardMan.properties[UnitProperties.HealthRegen] = 3;
			LizardMan.properties[UnitProperties.IsMechanical] = 0;
			LizardMan.properties[UnitProperties.MaxHealth] = 120;
			LizardMan.properties[UnitProperties.MoveSpeed] = 40;
			LizardMan.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			LizardMan.properties[UnitProperties.ProjectileModelId] = 809186;
			LizardMan.properties[UnitProperties.ProjectileSpeed] = 4;
			LizardMan.properties[UnitProperties.SightRange] = 3;
			LizardMan.properties[UnitProperties.AttackDamageRange] = 0;
			LizardMan.bountyResources[ResourceType.Gold] = 70;
			LizardMan.properties[UnitProperties.HealthRegenRate] = Util.secToFrames(4);		
			LizardMan.properties[UnitProperties.HealthRegen] = 1;
			LizardMan.soundPack.attack = SoundResources.spit1;
			LizardMan.soundPack.hit = SoundResources.hitWeb;
			LizardMan.icon = new BitmapAsset(BitmapResources.icoGiantSpider.bitmapData);
			game.unitManager.addUnitType(LizardMan);

			Zombie = new UnitType(true);
			Zombie.model = game.spriteRepository.getByName("UnitPhaseSpider") as UnitSprite;
			Zombie.name = "Zombie";
			Zombie.id = 2625111;
			Zombie.description = "";
			Zombie.type = UnitTypes.Unit;
			Zombie.xLength = 1;
			Zombie.yLength = 1;
			Zombie.isUpgrade = false;
			Zombie.isFlying = false;
			Zombie.isTrader = false;
			Zombie.constructionTime = 1;
			Zombie.properties[UnitProperties.Armor] = 2;
			Zombie.properties[UnitProperties.ArmorType] = ArmorType.NORMAL;
			Zombie.properties[UnitProperties.AttackDelay] = Util.secToFrames(1.9);
			Zombie.properties[UnitProperties.AttackDmgMax] = 10;
			Zombie.properties[UnitProperties.AttackDmgMin] = 11;
			Zombie.properties[UnitProperties.AttackDmgType] = DamageType.Piersing;
			Zombie.properties[UnitProperties.AttackRange] = 1;
			Zombie.properties[UnitProperties.AttackSpeed] = Util.secToFrames(1);
			Zombie.properties[UnitProperties.AttackSpell] = 0;
			Zombie.properties[UnitProperties.AttackVisualEffectId] = 0;
			Zombie.properties[UnitProperties.CastDelay] = 48;
			Zombie.properties[UnitProperties.CastSpeed] = 12;
			Zombie.properties[UnitProperties.HealthRegenRate] = 24;
			Zombie.properties[UnitProperties.HealthRegen] = 3;
			Zombie.properties[UnitProperties.IsMechanical] = 0;
			Zombie.properties[UnitProperties.MaxHealth] = 150;
			Zombie.properties[UnitProperties.MoveSpeed] = 40;
			Zombie.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			Zombie.properties[UnitProperties.ProjectileModelId] = 809186;
			Zombie.properties[UnitProperties.ProjectileSpeed] = 4;
			Zombie.properties[UnitProperties.SightRange] = 3;
			Zombie.properties[UnitProperties.AttackDamageRange] = 0;
			Zombie.bountyResources[ResourceType.Gold] = 70;
			Zombie.properties[UnitProperties.HealthRegenRate] = Util.secToFrames(4);		
			Zombie.properties[UnitProperties.HealthRegen] = 1;
			Zombie.soundPack.attack = SoundResources.spit1;
			Zombie.soundPack.hit = SoundResources.hitWeb;
			Zombie.icon = new BitmapAsset(BitmapResources.icoGiantSpider.bitmapData);
			game.unitManager.addUnitType(Zombie);
															
			WeaponsMerchant = new UnitType(true);
			WeaponsMerchant.model = game.spriteRepository.getByName("BuildingHouse1") as UnitSprite;
			WeaponsMerchant.name = "Rare Items Merchant";
			WeaponsMerchant.id = 3201;
			WeaponsMerchant.description = "";
			WeaponsMerchant.type = UnitTypes.Structure;
			WeaponsMerchant.xLength = 2;
			WeaponsMerchant.yLength = 3;
			WeaponsMerchant.isUpgrade = false;
			WeaponsMerchant.isFlying = false;
			WeaponsMerchant.isTrader = true;
			WeaponsMerchant.constructionTime = 1;
			WeaponsMerchant.properties[UnitProperties.ArmorType] = ArmorType.FORTIFIED;
			WeaponsMerchant.properties[UnitProperties.AttackDelay] = 24;
			WeaponsMerchant.properties[UnitProperties.AttackDmgMax] = 30;
			WeaponsMerchant.properties[UnitProperties.AttackDmgMin] = 20;
			WeaponsMerchant.properties[UnitProperties.AttackDmgType] = DamageType.Normal;
			WeaponsMerchant.properties[UnitProperties.AttackRange] = 1;
			WeaponsMerchant.properties[UnitProperties.AttackSpeed] = 12;
			WeaponsMerchant.properties[UnitProperties.AttackSpell] = 0;
			WeaponsMerchant.properties[UnitProperties.AttackVisualEffectId] = 0;
			WeaponsMerchant.properties[UnitProperties.CastDelay] = 48;
			WeaponsMerchant.properties[UnitProperties.CastSpeed] = 12;
			WeaponsMerchant.properties[UnitProperties.IsMechanical] = 1;
			WeaponsMerchant.properties[UnitProperties.MaxHealth] = 24;
			WeaponsMerchant.properties[UnitProperties.MoveSpeed] = 40;
			WeaponsMerchant.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			WeaponsMerchant.properties[UnitProperties.ProjectileModelId] = 0;
			WeaponsMerchant.properties[UnitProperties.ProjectileSpeed] = 12;
			WeaponsMerchant.properties[UnitProperties.SightRange] = 0;
			WeaponsMerchant.properties[UnitProperties.AttackDamageRange] = 0;
			WeaponsMerchant.icon = new BitmapAsset(BitmapResources.icoItemCoin.bitmapData);
			WeaponsMerchant.soundPack.what = SoundResources.trader;
			game.unitManager.addUnitType(WeaponsMerchant);
						
			Nexus = new UnitType(true);
			Nexus.model = game.spriteRepository.getByName("BuildingTowerStone2") as UnitSprite;
			Nexus.name = "Nexus";
			Nexus.id = 2888;
			Nexus.description = "Powerful tower that uses frost nova as primary attack. Slows enemies down and has large splash efffect.";
			Nexus.type = UnitTypes.Structure;
			Nexus.xLength = 2;
			Nexus.yLength = 2;
			Nexus.isUpgrade = false;
			Nexus.isFlying = false;
			Nexus.isTrader = false;
			Nexus.constructionTime = 576;
			Nexus.properties[UnitProperties.Armor] = 10;
			Nexus.properties[UnitProperties.ArmorType] = ArmorType.FORTIFIED;
			Nexus.properties[UnitProperties.AstralRes] = 50;
			Nexus.properties[UnitProperties.AttackDelay] = Util.secToFrames(1.6);
			Nexus.properties[UnitProperties.AttackDmgMax] = 158;
			Nexus.properties[UnitProperties.AttackDmgMin] = 151;
			Nexus.properties[UnitProperties.AttackDmgType] = DamageType.Magic;
			Nexus.properties[UnitProperties.AttackRange] = 7;
			Nexus.properties[UnitProperties.AttackSpeed] = Util.secToFrames(1);
			Nexus.properties[UnitProperties.AttackVisualEffectId] = typesRepository.effectTypes.Acid.id;			
			Nexus.properties[UnitProperties.CastDelay] = 48;
			Nexus.properties[UnitProperties.CastSpeed] = 12;
			Nexus.properties[UnitProperties.IsMechanical] = 1;
			Nexus.properties[UnitProperties.MagicRes] = 100;
			Nexus.properties[UnitProperties.MaxHealth] = 4200;
			Nexus.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			Nexus.properties[UnitProperties.ProjectileModelId] = game.spriteRepository.getByName("ProjectileAstralArrow").id;
			Nexus.properties[UnitProperties.ProjectileSpeed] = 4;
			Nexus.properties[UnitProperties.SightRange] = 7;
			Nexus.bountyResources[ResourceType.Gold] = 500;
			Nexus.soundPack.hit = SoundResources.magicHit4;
			Nexus.soundPack.attack = SoundResources.magicShoot4;
			Nexus.icon = new BitmapAsset(BitmapResources.icoNexus.bitmapData);
			Nexus.properties[UnitProperties.HealthRegenRate] = 24;
			Nexus.properties[UnitProperties.HealthRegen] = 3;
			game.unitManager.addUnitType(Nexus);

			ArcaneTower = new UnitType(true);
			ArcaneTower.model = game.spriteRepository.getByName("BuildingTowerStone6") as UnitSprite;
			ArcaneTower.name = "Arcane Tower";
			ArcaneTower.id = 93508;
			ArcaneTower.description = "Powerful tower that uses frost nova as primary attack. Slows enemies down and has large splash efffect.";
			ArcaneTower.type = UnitTypes.Structure;
			ArcaneTower.xLength = 2;
			ArcaneTower.yLength = 2;
			ArcaneTower.isUpgrade = false;
			ArcaneTower.isFlying = false;
			ArcaneTower.isTrader = false;
			ArcaneTower.constructionTime = 576;
			ArcaneTower.properties[UnitProperties.Armor] = 10;
			ArcaneTower.properties[UnitProperties.ArmorType] = ArmorType.FORTIFIED;
			ArcaneTower.properties[UnitProperties.AstralRes] = 50;
			ArcaneTower.properties[UnitProperties.AttackDelay] = Util.secToFrames(1.6);
			ArcaneTower.properties[UnitProperties.AttackDmgMax] = 158;
			ArcaneTower.properties[UnitProperties.AttackDmgMin] = 151;
			ArcaneTower.properties[UnitProperties.AttackDmgType] = DamageType.Magic;
			ArcaneTower.properties[UnitProperties.AttackRange] = 7;
			ArcaneTower.properties[UnitProperties.AttackSpeed] = Util.secToFrames(1);
			ArcaneTower.properties[UnitProperties.AttackVisualEffectId] = typesRepository.effectTypes.Sparks2.id;
			ArcaneTower.properties[UnitProperties.CastDelay] = 48;
			ArcaneTower.properties[UnitProperties.CastSpeed] = 12;
			ArcaneTower.properties[UnitProperties.IsMechanical] = 1;
			ArcaneTower.properties[UnitProperties.MagicRes] = 100;
			ArcaneTower.properties[UnitProperties.MaxHealth] = 4200;
			ArcaneTower.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			ArcaneTower.properties[UnitProperties.ProjectileModelId] = game.spriteRepository.getByName("ProjectileWaterBall").id;
			ArcaneTower.properties[UnitProperties.ProjectileSpeed] = 3;
			ArcaneTower.properties[UnitProperties.SightRange] = 7;
			ArcaneTower.bountyResources[ResourceType.Gold] = 500;
			ArcaneTower.soundPack.hit = SoundResources.magicHit4;
			ArcaneTower.soundPack.attack = SoundResources.magicShoot4;
			ArcaneTower.icon = new BitmapAsset(BitmapResources.icoTowerStone6.bitmapData);
			ArcaneTower.properties[UnitProperties.HealthRegenRate] = 24;
			ArcaneTower.properties[UnitProperties.HealthRegen] = 3;
			game.unitManager.addUnitType(ArcaneTower);
						

			FountainofLife = new UnitType(true);
			FountainofLife.model = game.spriteRepository.getByName("BuildingFountain1") as UnitSprite;
			FountainofLife.name = "Fountain of Life";
			FountainofLife.id = 6419962;
			FountainofLife.description = " ";
			FountainofLife.type = UnitTypes.Structure;
			FountainofLife.xLength = 2;
			FountainofLife.yLength = 2;
			FountainofLife.isUpgrade = false;
			FountainofLife.isFlying = false;
			FountainofLife.isTrader = false;
			FountainofLife.constructionTime = 1;
			game.unitManager.addUnitType(FountainofLife);
			FountainofLife.properties[UnitProperties.ArmorType] = ArmorType.DIVINE;
			FountainofLife.properties[UnitProperties.AttackDelay] = 24;
			FountainofLife.properties[UnitProperties.AttackDmgType] = DamageType.Normal;
			FountainofLife.properties[UnitProperties.AttackSpeed] = 12;
			FountainofLife.properties[UnitProperties.AttackSpell] = 0;
			FountainofLife.properties[UnitProperties.AttackVisualEffectId] = 0;
			FountainofLife.properties[UnitProperties.CastDelay] = 48;
			FountainofLife.properties[UnitProperties.CastSpeed] = 12;
			FountainofLife.properties[UnitProperties.IsMechanical] = 1;
			FountainofLife.properties[UnitProperties.MaxHealth] = 1500;
			FountainofLife.properties[UnitProperties.MoveSpeed] = 40;
			FountainofLife.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			FountainofLife.properties[UnitProperties.ProjectileModelId] = 0;
			FountainofLife.properties[UnitProperties.ProjectileSpeed] = 12;
			FountainofLife.properties[UnitProperties.SightRange] = 0;
			FountainofLife.properties[UnitProperties.AttackDamageRange] = 0;
			FountainofLife.icon = new BitmapAsset(BitmapResources.icoSpellHeal.bitmapData);
						
			Barracks = new UnitType(true);
			Barracks.model = game.spriteRepository.getByName("BuildingBarracks") as UnitSprite;
			Barracks.name = "Barracks";
			Barracks.id = 28092;
			Barracks.description = " ";
			Barracks.type = UnitTypes.Structure;
			Barracks.xLength = 4;
			Barracks.yLength = 4;
			Barracks.isUpgrade = false;
			Barracks.isFlying = false;
			Barracks.isTrader = false;
			Barracks.constructionTime = 1;
			Barracks.properties[UnitProperties.Armor] = 5;
			Barracks.properties[UnitProperties.ArmorType] = ArmorType.FORTIFIED;
			Barracks.properties[UnitProperties.AstralRes] = 50;
			Barracks.properties[UnitProperties.AttackDelay] = 24;
			Barracks.properties[UnitProperties.AttackDmgMax] = 0;
			Barracks.properties[UnitProperties.AttackDmgMin] = 0;
			Barracks.properties[UnitProperties.AttackDmgType] = DamageType.Normal;
			Barracks.properties[UnitProperties.AttackRange] = 0;
			Barracks.properties[UnitProperties.AttackSpeed] = 12;
			Barracks.properties[UnitProperties.AttackSpell] = 0;
			Barracks.properties[UnitProperties.AttackVisualEffectId] = 0;
			Barracks.properties[UnitProperties.CastDelay] = 0;
			Barracks.properties[UnitProperties.CastSpeed] = 0;
			Barracks.properties[UnitProperties.IsMechanical] = 1;
			Barracks.properties[UnitProperties.MagicRes] = 100;
			Barracks.properties[UnitProperties.MaxHealth] = 2400;
			Barracks.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			Barracks.properties[UnitProperties.ProjectileModelId] = 0;
			Barracks.properties[UnitProperties.ProjectileSpeed] = 12;
			Barracks.properties[UnitProperties.SightRange] = 0;
			Barracks.properties[UnitProperties.AttackDamageRange] = 0;
			Barracks.properties[UnitProperties.HealthRegenRate] = Util.secToFrames(1);		
			Barracks.properties[UnitProperties.HealthRegen] = 8;
			Barracks.bountyResources[ResourceType.Gold] = 500;
			Barracks.icon = new BitmapAsset(BitmapResources.icoCombatSpecialization.bitmapData);
			game.unitManager.addUnitType(Barracks);

			AncientProtector = new UnitType(true);
			AncientProtector.model = game.spriteRepository.getByName("UnitWisp") as UnitSprite;
			AncientProtector.name = "Arcane Spirit";
			AncientProtector.id = 1231;
			AncientProtector.description = "";
			AncientProtector.type = UnitTypes.Unit;
			AncientProtector.xLength = 1;
			AncientProtector.yLength = 1;
			AncientProtector.isUpgrade = false;
			AncientProtector.isFlying = false;
			AncientProtector.isTrader = false;
			AncientProtector.constructionTime = 240;
			game.unitManager.addUnitType(AncientProtector);
			AncientProtector.properties[UnitProperties.ArmorType] = ArmorType.NONE;
			AncientProtector.properties[UnitProperties.AstralRes] = 100;
			AncientProtector.properties[UnitProperties.AttackDelay] = Util.secToFrames(0.1);
			AncientProtector.properties[UnitProperties.AttackDmgMax] = 1;
			AncientProtector.properties[UnitProperties.AttackDmgMin] = 3;
			AncientProtector.properties[UnitProperties.AttackDmgType] = DamageType.Magic;
			AncientProtector.properties[UnitProperties.AttackRange] = 4;
			AncientProtector.properties[UnitProperties.AttackSpeed] = Util.secToFrames(0.6);
			AncientProtector.properties[UnitProperties.AttackSpell] = 0;
			AncientProtector.properties[UnitProperties.AttackVisualEffectId] = 0;
			AncientProtector.properties[UnitProperties.CastDelay] = 48;
			AncientProtector.properties[UnitProperties.CastSpeed] = 12;
			AncientProtector.properties[UnitProperties.IsMechanical] = 0;
			AncientProtector.properties[UnitProperties.MagicRes] = 100;
			AncientProtector.properties[UnitProperties.MaxHealth] = 50;
			AncientProtector.properties[UnitProperties.MoveSpeed] = 24;
			AncientProtector.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			AncientProtector.properties[UnitProperties.ProjectileModelId] = game.spriteRepository.getByName("ProjectileAstralArrow").id;
			AncientProtector.properties[UnitProperties.ProjectileSpeed] = 3;
			AncientProtector.properties[UnitProperties.SightRange] = 4;
			AncientProtector.properties[UnitProperties.AttackDamageRange] = 0;
			AncientProtector.icon = new BitmapAsset(BitmapResources.icoWisp.bitmapData);
						
			Skeleton = new UnitType(true);
			Skeleton.model = game.spriteRepository.getByName("UnitSkeleton") as UnitSprite;
			Skeleton.name = "Skeleton";
			Skeleton.id = 26195;
			Skeleton.description = "Undead. Weak melee unit. Resistant to magic.";
			Skeleton.type = UnitTypes.Unit;
			Skeleton.xLength = 1;
			Skeleton.yLength = 1;
			Skeleton.isUpgrade = false;
			Skeleton.isFlying = false;
			Skeleton.isTrader = false;
			Skeleton.constructionTime = 1;
			Skeleton.properties[UnitProperties.ArmorType] = ArmorType.LIGHT;
			Skeleton.properties[UnitProperties.AttackDelay] = Util.secToFrames(1.3);
			Skeleton.properties[UnitProperties.AttackDmgMax] = 14;
			Skeleton.properties[UnitProperties.AttackDmgMin] = 12;
			Skeleton.properties[UnitProperties.AttackDmgType] = DamageType.Normal;
			Skeleton.properties[UnitProperties.AttackRange] = 1;
			Skeleton.properties[UnitProperties.AttackSpeed] = Util.secToFrames(1);
			Skeleton.properties[UnitProperties.AttackSpell] = 0;
			Skeleton.properties[UnitProperties.AttackVisualEffectId] = 0;
			Skeleton.properties[UnitProperties.CastDelay] = 48;
			Skeleton.properties[UnitProperties.CastSpeed] = 12;
			Skeleton.properties[UnitProperties.IsMechanical] = 1;
			Skeleton.properties[UnitProperties.MagicRes] = 20;
			Skeleton.properties[UnitProperties.MaxHealth] = 260;
			Skeleton.properties[UnitProperties.MoveSpeed] = 16;
			Skeleton.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			Skeleton.properties[UnitProperties.ProjectileModelId] = 0;
			Skeleton.properties[UnitProperties.ProjectileSpeed] = 12;
			Skeleton.properties[UnitProperties.SightRange] = 6;
			Skeleton.properties[UnitProperties.AttackDamageRange] = 0;
			Skeleton.bountyResources[ResourceType.Gold] = 5;
			Skeleton.properties[UnitProperties.HealthRegenRate] = Util.secToFrames(4);		
			Skeleton.properties[UnitProperties.HealthRegen] = 1;
			Skeleton.icon = new BitmapAsset(BitmapResources.icoSkeleton.bitmapData);
			Skeleton.soundPack.hit = SoundResources.hitClub1;			
			game.unitManager.addUnitType(Skeleton);

			SkeletonDrain = new UnitType(true);
			SkeletonDrain.model = game.spriteRepository.getByName("UnitSkeleton") as UnitSprite;
			SkeletonDrain.name = "Skeleton";
			SkeletonDrain.id = 26231895;
			SkeletonDrain.description = "Undead. Weak melee unit. Resistant to magic.";
			SkeletonDrain.type = UnitTypes.Unit;
			SkeletonDrain.xLength = 1;
			SkeletonDrain.yLength = 1;
			SkeletonDrain.isUpgrade = false;
			SkeletonDrain.isFlying = false;
			SkeletonDrain.isTrader = false;
			SkeletonDrain.constructionTime = 1;
			SkeletonDrain.properties[UnitProperties.ArmorType] = ArmorType.LIGHT;
			SkeletonDrain.properties[UnitProperties.AttackDelay] = Util.secToFrames(1.3);
			SkeletonDrain.properties[UnitProperties.AttackDmgMax] = 14;
			SkeletonDrain.properties[UnitProperties.AttackDmgMin] = 9;
			SkeletonDrain.properties[UnitProperties.AttackDmgType] = DamageType.Normal;
			SkeletonDrain.properties[UnitProperties.AttackRange] = 1;
			SkeletonDrain.properties[UnitProperties.AttackSpeed] = Util.secToFrames(1);
			SkeletonDrain.properties[UnitProperties.AttackSpell] = 0;
			SkeletonDrain.properties[UnitProperties.AttackVisualEffectId] = 0;
			SkeletonDrain.properties[UnitProperties.CastDelay] = 48;
			SkeletonDrain.properties[UnitProperties.CastSpeed] = 12;
			SkeletonDrain.properties[UnitProperties.IsMechanical] = 1;
			SkeletonDrain.properties[UnitProperties.MagicRes] = 20;
			SkeletonDrain.properties[UnitProperties.MaxHealth] = 260;
			SkeletonDrain.properties[UnitProperties.MoveSpeed] = 16;
			SkeletonDrain.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			SkeletonDrain.properties[UnitProperties.ProjectileModelId] = 0;
			SkeletonDrain.properties[UnitProperties.ProjectileSpeed] = 12;
			SkeletonDrain.properties[UnitProperties.SightRange] = 6;
			SkeletonDrain.properties[UnitProperties.AttackDamageRange] = 0;
			SkeletonDrain.properties[UnitProperties.HealthRegenRate] = Util.secToFrames(4);		
			SkeletonDrain.properties[UnitProperties.HealthRegen] = 1;
			SkeletonDrain.icon = new BitmapAsset(BitmapResources.icoSkeleton.bitmapData);
			SkeletonDrain.soundPack.hit = SoundResources.hitClub1;
			game.unitManager.addUnitType(SkeletonDrain);

									
			HeroPaladin = new UnitType(true);
			HeroPaladin.model = game.spriteRepository.getByName("UnitKnight") as UnitSprite;
			HeroPaladin.name = "Paladin";
			HeroPaladin.id = 15449;
			HeroPaladin.description = "Paladin.";
			HeroPaladin.type = UnitTypes.Hero;
			HeroPaladin.xLength = 1;
			HeroPaladin.yLength = 1;
			HeroPaladin.isUpgrade = false;
			HeroPaladin.isFlying = false;
			HeroPaladin.isTrader = false;
			HeroPaladin.constructionTime = 1;
			HeroPaladin.properties[UnitProperties.Armor] = 1;
			HeroPaladin.properties[UnitProperties.ArmorType] = ArmorType.HERO;
			HeroPaladin.properties[UnitProperties.AttackDelay] = Util.secToFrames(0.8);
			HeroPaladin.properties[UnitProperties.AttackDmgMax] = 12;
			HeroPaladin.properties[UnitProperties.AttackDmgMin] = 2;
			HeroPaladin.properties[UnitProperties.AttackDmgType] = DamageType.Hero;
			HeroPaladin.properties[UnitProperties.AttackRange] = 1;
			HeroPaladin.properties[UnitProperties.AttackSpeed] = Util.secToFrames(0.7);
			HeroPaladin.properties[UnitProperties.AttackSpell] = 0;
			HeroPaladin.properties[UnitProperties.AttackVisualEffectId] = 0;
			HeroPaladin.properties[UnitProperties.CastDelay] = Util.secToFrames(0.7);
			HeroPaladin.properties[UnitProperties.CastSpeed] = Util.secToFrames(0.6);
			HeroPaladin.properties[UnitProperties.HealthRegenRate] = 48;
			HeroPaladin.properties[UnitProperties.HealthRegen] = 1;
			HeroPaladin.properties[UnitProperties.IsMechanical] = 0;
			HeroPaladin.properties[UnitProperties.ManaRegenRate] = 50;
			HeroPaladin.properties[UnitProperties.ManaRegen] = 1;
			HeroPaladin.properties[UnitProperties.MaxHealth] = 215;
			HeroPaladin.properties[UnitProperties.MaxMana] = 50;
			HeroPaladin.properties[UnitProperties.MoveSpeed] = 16;
			HeroPaladin.properties[UnitProperties.ProjectileSpeed] = 4;
			HeroPaladin.properties[UnitProperties.SightRange] = 7;
			HeroPaladin.properties[UnitProperties.AttackDamageRange] = 0;
			HeroPaladin.properties[HeroProperties.Stength] = 23;
			HeroPaladin.properties[HeroProperties.Agility] = 17;	
			HeroPaladin.properties[HeroProperties.Intellect] = 18;		
			HeroPaladin.bountyResources[ResourceType.Gold] = 300;
			HeroPaladin.primaryProperty = HeroProperties.Stength;
			HeroPaladin.agilityPerLevel = 2;
			HeroPaladin.intellectPerLevel = 1;
			HeroPaladin.strengthPerLevel = 3;						
			HeroPaladin.icon = new BitmapAsset(BitmapResources.palladinPortrait.bitmapData);
			HeroPaladin.soundPack.hit = SoundResources.hitWet1;			
			HeroPaladin.heroNames = ["Agamand", "Ballador the Bright", "Aurrius", "Jorn the Redeemer", "Alnov"];
			game.unitManager.addUnitType(HeroPaladin);
			
			HeroBarbar = new UnitType(true);
			HeroBarbar.model = game.spriteRepository.getByName("UnitBarbar") as UnitSprite;
			HeroBarbar.name = "Barbarian";
			HeroBarbar.id = 11574149;
			HeroBarbar.description = "Barbarian.";
			HeroBarbar.type = UnitTypes.Hero;
			HeroBarbar.xLength = 1;
			HeroBarbar.yLength = 1;
			HeroBarbar.isUpgrade = false;
			HeroBarbar.isFlying = false;
			HeroBarbar.isTrader = false;
			HeroBarbar.constructionTime = 1;
			HeroBarbar.properties[UnitProperties.Armor] = 0;
			HeroBarbar.properties[UnitProperties.ArmorType] = ArmorType.HERO;
			HeroBarbar.properties[UnitProperties.AttackDelay] = Util.secToFrames(0.8);
			HeroBarbar.properties[UnitProperties.AttackDmgMax] = 14;
			HeroBarbar.properties[UnitProperties.AttackDmgMin] = 1;
			HeroBarbar.properties[UnitProperties.AttackDmgType] = DamageType.Hero;
			HeroBarbar.properties[UnitProperties.AttackRange] = 1;
			HeroBarbar.properties[UnitProperties.AttackSpeed] = Util.secToFrames(0.9);
			HeroBarbar.properties[UnitProperties.AttackSpell] = 0;
			HeroBarbar.properties[UnitProperties.AttackVisualEffectId] = 0;
			HeroBarbar.properties[UnitProperties.CastDelay] = Util.secToFrames(0.7);
			HeroBarbar.properties[UnitProperties.CastSpeed] = Util.secToFrames(0.5);
			HeroBarbar.properties[UnitProperties.HealthRegenRate] = 48;
			HeroBarbar.properties[UnitProperties.HealthRegen] = 1;
			HeroBarbar.properties[UnitProperties.IsMechanical] = 0;
			HeroBarbar.properties[UnitProperties.ManaRegenRate] = 60;
			HeroBarbar.properties[UnitProperties.ManaRegen] = 1;
			HeroBarbar.properties[UnitProperties.MaxHealth] = 165;
			HeroBarbar.properties[UnitProperties.MaxMana] = 15;
			HeroBarbar.properties[UnitProperties.MoveSpeed] = 16;
			HeroBarbar.properties[UnitProperties.ProjectileSpeed] = 4;
			HeroBarbar.properties[UnitProperties.SightRange] = 7;
			HeroBarbar.properties[UnitProperties.AttackDamageRange] = 0;
			HeroBarbar.properties[HeroProperties.Stength] = 27;
			HeroBarbar.properties[HeroProperties.Agility] = 14;	
			HeroBarbar.properties[HeroProperties.Intellect] = 15;		
			HeroBarbar.bountyResources[ResourceType.Gold] = 300;
			HeroBarbar.primaryProperty = HeroProperties.Stength;
			HeroBarbar.agilityPerLevel = 2;
			HeroBarbar.intellectPerLevel = 1;
			HeroBarbar.strengthPerLevel = 3;	
			HeroBarbar.heroNames = ["Conan", "Alaric", "Gundahar", "Alijar"];
			HeroBarbar.soundPack.hit = SoundResources.hitWet1;												
			HeroBarbar.icon = new BitmapAsset(BitmapResources.barbarPortrait.bitmapData);
			game.unitManager.addUnitType(HeroBarbar);

			HeroMage = new UnitType(true);
			HeroMage.model = game.spriteRepository.getByName("UnitMageWhite") as UnitSprite;
			HeroMage.name = "Mage";
			HeroMage.id = 144491;
			HeroMage.description = "Mage.";
			HeroMage.type = UnitTypes.Hero;
			HeroMage.xLength = 1;
			HeroMage.yLength = 1;
			HeroMage.isUpgrade = false;
			HeroMage.isFlying = false;
			HeroMage.isTrader = false;
			HeroMage.constructionTime = 1;
			HeroMage.properties[UnitProperties.Armor] = 0;
			HeroMage.properties[UnitProperties.ArmorType] = ArmorType.HERO;
			HeroMage.properties[UnitProperties.AttackDelay] = Util.secToFrames(1);
			HeroMage.properties[UnitProperties.AttackDmgMax] = 6;
			HeroMage.properties[UnitProperties.AttackDmgMin] = 0;
			HeroMage.properties[UnitProperties.AttackDmgType] = DamageType.Hero;
			HeroMage.properties[UnitProperties.AttackRange] = 6;
			HeroMage.properties[UnitProperties.AttackSpeed] = Util.secToFrames(0.8);
			HeroMage.properties[UnitProperties.AttackSpell] = 0;
			HeroMage.properties[UnitProperties.AttackVisualEffectId] = 0;
			HeroMage.properties[UnitProperties.CastDelay] = Util.secToFrames(0.6);
			HeroMage.properties[UnitProperties.CastSpeed] = Util.secToFrames(0.6);
			HeroMage.properties[UnitProperties.HealthRegenRate] = 50;
			HeroMage.properties[UnitProperties.HealthRegen] = 1;
			HeroMage.properties[UnitProperties.IsMechanical] = 0;
			HeroMage.properties[UnitProperties.ManaRegenRate] = 48;
			HeroMage.properties[UnitProperties.ManaRegen] = 1;
			HeroMage.properties[UnitProperties.MaxHealth] = 175;
			HeroMage.properties[UnitProperties.MaxMana] = 150;
			HeroMage.properties[UnitProperties.MoveSpeed] = 16;
			HeroMage.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			HeroMage.properties[UnitProperties.ProjectileModelId] = game.spriteRepository.getByName("ProjectileFireArrow").id;
			HeroMage.properties[UnitProperties.ProjectileSpeed] = 3;
			HeroMage.properties[UnitProperties.SightRange] = 7;
			HeroMage.properties[UnitProperties.AttackDamageRange] = 0;
			HeroMage.properties[HeroProperties.Stength] = 18;
			HeroMage.properties[HeroProperties.Agility] = 16;	
			HeroMage.properties[HeroProperties.Intellect] = 21;
			HeroMage.bountyResources[ResourceType.Gold] = 300;
			HeroMage.icon = new BitmapAsset(BitmapResources.magePortrait.bitmapData);
			HeroMage.primaryProperty = HeroProperties.Intellect;
			HeroMage.agilityPerLevel = 1;
			HeroMage.intellectPerLevel = 3;
			HeroMage.strengthPerLevel = 2;	
			HeroMage.heroNames = ["Tenn Flamecaster", "Nilas Arcanister", "Landazar", "Kelen the Seeker", "Fordred Aran"];
			HeroMage.soundPack.attack = SoundResources.magicShoot2;						
			game.unitManager.addUnitType(HeroMage);
			
			HeroLich = new UnitType(true);
			HeroLich.model = game.spriteRepository.getByName("UnitLich") as UnitSprite;
			HeroLich.name = "Lich";
			HeroLich.id = 14449121;
			HeroLich.description = "Lich.";
			HeroLich.type = UnitTypes.Hero;
			HeroLich.xLength = 1;
			HeroLich.yLength = 1;
			HeroLich.isUpgrade = false;
			HeroLich.isFlying = false;
			HeroLich.isTrader = false;
			HeroLich.constructionTime = 1;
			HeroLich.properties[UnitProperties.Armor] = 0;
			HeroLich.properties[UnitProperties.ArmorType] = ArmorType.HERO;
			HeroLich.properties[UnitProperties.AttackDelay] = Util.secToFrames(1);
			HeroLich.properties[UnitProperties.AttackDmgMax] = 4;
			HeroLich.properties[UnitProperties.AttackDmgMin] = 1;
			HeroLich.properties[UnitProperties.AttackDmgType] = DamageType.Hero;
			HeroLich.properties[UnitProperties.AttackRange] = 6;
			HeroLich.properties[UnitProperties.AttackSpeed] = Util.secToFrames(0.8);
			HeroLich.properties[UnitProperties.AttackSpell] = 0;
			HeroLich.properties[UnitProperties.AttackVisualEffectId] = 0;
			HeroLich.properties[UnitProperties.CastDelay] = Util.secToFrames(0.7);
			HeroLich.properties[UnitProperties.CastSpeed] = Util.secToFrames(0.7);
			HeroLich.properties[UnitProperties.HealthRegenRate] = 52;
			HeroLich.properties[UnitProperties.HealthRegen] = 1;
			HeroLich.properties[UnitProperties.IsMechanical] = 0;
			HeroLich.properties[UnitProperties.ManaRegenRate] = 48;
			HeroLich.properties[UnitProperties.ManaRegen] = 1;
			HeroLich.properties[UnitProperties.MaxHealth] = 165;
			HeroLich.properties[UnitProperties.MaxMana] = 155;
			HeroLich.properties[UnitProperties.MoveSpeed] = 16;
			HeroLich.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			HeroLich.properties[UnitProperties.ProjectileModelId] = game.spriteRepository.getByName("ProjectileAstralArrow").id;
			HeroLich.properties[UnitProperties.ProjectileSpeed] = 3;
			HeroLich.properties[UnitProperties.SightRange] = 7;
			HeroLich.properties[UnitProperties.AttackDamageRange] = 0;
			HeroLich.properties[HeroProperties.Stength] = 17;
			HeroLich.properties[HeroProperties.Agility] = 15;	
			HeroLich.properties[HeroProperties.Intellect] = 23;
			HeroLich.properties[UnitProperties.MagicRes] = 10;
			HeroLich.bountyResources[ResourceType.Gold] = 300;
			HeroLich.icon = new BitmapAsset(BitmapResources.lichPortrait.bitmapData);
			HeroLich.primaryProperty = HeroProperties.Intellect;
			HeroLich.agilityPerLevel = 1;
			HeroLich.intellectPerLevel = 3;
			HeroLich.strengthPerLevel = 2;	
			HeroLich.soundPack.attack = SoundResources.magicShoot7;				
			HeroLich.heroNames = ["Ordin Frostbane", "Ras Splinterspine", "Morbent Fell", "Rage Winterchill"];
			game.unitManager.addUnitType(HeroLich);
									
			SkeletonSwordsman = new UnitType(true);
			SkeletonSwordsman.model = game.spriteRepository.getByName("UnitSkeletonSword") as UnitSprite;
			SkeletonSwordsman.name = "Skeleton Swordsman";
			SkeletonSwordsman.id = 27952674;
			SkeletonSwordsman.description = "Undead. Heavy armored melee unit. Medium magic resistance.";
			SkeletonSwordsman.type = UnitTypes.Unit;
			SkeletonSwordsman.xLength = 1;
			SkeletonSwordsman.yLength = 1;
			SkeletonSwordsman.isUpgrade = false;
			SkeletonSwordsman.isFlying = false;
			SkeletonSwordsman.isTrader = false;
			SkeletonSwordsman.constructionTime = 1;
			SkeletonSwordsman.properties[UnitProperties.Armor] = 2;
			SkeletonSwordsman.properties[UnitProperties.ArmorType] = ArmorType.NORMAL;
			SkeletonSwordsman.properties[UnitProperties.AstralRes] = 10;
			SkeletonSwordsman.properties[UnitProperties.AttackDelay] = Util.secToFrames(1.25);
			SkeletonSwordsman.properties[UnitProperties.AttackDmgMax] = 18;
			SkeletonSwordsman.properties[UnitProperties.AttackDmgMin] = 14;
			SkeletonSwordsman.properties[UnitProperties.AttackDmgType] = DamageType.Normal;
			SkeletonSwordsman.properties[UnitProperties.AttackRange] = 1;
			SkeletonSwordsman.properties[UnitProperties.AttackSpeed] = Util.secToFrames(0.7);
			SkeletonSwordsman.properties[UnitProperties.AttackSpell] = 0;
			SkeletonSwordsman.properties[UnitProperties.AttackVisualEffectId] = 0;
			SkeletonSwordsman.properties[UnitProperties.CastDelay] = 48;
			SkeletonSwordsman.properties[UnitProperties.CastSpeed] = 12;
			SkeletonSwordsman.properties[UnitProperties.IsMechanical] = 1;
			SkeletonSwordsman.properties[UnitProperties.MagicRes] = 25;
			SkeletonSwordsman.properties[UnitProperties.MaxHealth] = 320;
			SkeletonSwordsman.properties[UnitProperties.MoveSpeed] = 16;
			SkeletonSwordsman.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			SkeletonSwordsman.properties[UnitProperties.ProjectileModelId] = 0;
			SkeletonSwordsman.properties[UnitProperties.ProjectileSpeed] = 0;
			SkeletonSwordsman.properties[UnitProperties.SightRange] = 6;
			SkeletonSwordsman.properties[UnitProperties.AttackDamageRange] = 0;
			SkeletonSwordsman.bountyResources[ResourceType.Gold] = 9;
			SkeletonSwordsman.properties[UnitProperties.HealthRegenRate] = Util.secToFrames(4);		
			SkeletonSwordsman.properties[UnitProperties.HealthRegen] = 1;
			SkeletonSwordsman.icon = new BitmapAsset(BitmapResources.icoSkeletonSword.bitmapData);
			SkeletonSwordsman.soundPack.hit = SoundResources.hitWet1;
			game.unitManager.addUnitType(SkeletonSwordsman);

			SkeletonKing = new UnitType(true);
			SkeletonKing.model = game.spriteRepository.getByName("UnitSkeletonKing") as UnitSprite;
			SkeletonKing.name = "Skeleton King";
			SkeletonKing.id = 26941874;
			SkeletonKing.description = "Undead. Heavy armored melee unit. Medium magic resistance.";
			SkeletonKing.type = UnitTypes.Unit;
			SkeletonKing.xLength = 1;
			SkeletonKing.yLength = 1;
			SkeletonKing.isUpgrade = false;
			SkeletonKing.isFlying = false;
			SkeletonKing.isTrader = false;
			SkeletonKing.constructionTime = 1;
			SkeletonKing.properties[UnitProperties.Armor] = 3;
			SkeletonKing.properties[UnitProperties.ArmorType] = ArmorType.HEAVY;
			SkeletonKing.properties[UnitProperties.AstralRes] = 10;
			SkeletonKing.properties[UnitProperties.AttackDelay] = Util.secToFrames(1.20);
			SkeletonKing.properties[UnitProperties.AttackDmgMax] = 38;
			SkeletonKing.properties[UnitProperties.AttackDmgMin] = 22;
			SkeletonKing.properties[UnitProperties.AttackDmgType] = DamageType.Normal;
			SkeletonKing.properties[UnitProperties.AttackRange] = 1;
			SkeletonKing.properties[UnitProperties.AttackSpeed] = Util.secToFrames(0.7);
			SkeletonKing.properties[UnitProperties.AttackSpell] = 0;
			SkeletonKing.properties[UnitProperties.AttackVisualEffectId] = 0;
			SkeletonKing.properties[UnitProperties.CastDelay] = 48;
			SkeletonKing.properties[UnitProperties.CastSpeed] = 12;
			SkeletonKing.properties[UnitProperties.IsMechanical] = 1;
			SkeletonKing.properties[UnitProperties.MagicRes] = 50;
			SkeletonKing.properties[UnitProperties.MaxHealth] = 480;
			SkeletonKing.properties[UnitProperties.MoveSpeed] = 16;
			SkeletonKing.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			SkeletonKing.properties[UnitProperties.ProjectileModelId] = 0;
			SkeletonKing.properties[UnitProperties.ProjectileSpeed] = 0;
			SkeletonKing.properties[UnitProperties.SightRange] = 6;
			SkeletonKing.properties[UnitProperties.AttackDamageRange] = 0;
			SkeletonKing.bountyResources[ResourceType.Gold] = 10;
			SkeletonKing.properties[UnitProperties.HealthRegenRate] = Util.secToFrames(4);		
			SkeletonKing.properties[UnitProperties.HealthRegen] = 1;
			SkeletonKing.icon = new BitmapAsset(BitmapResources.icoSkeletonSword.bitmapData);
			SkeletonKing.soundPack.hit = SoundResources.hitWet1;			
			game.unitManager.addUnitType(SkeletonKing);
						

			IceElemental = new UnitType(true);
			IceElemental.model = game.spriteRepository.getByName("UnitIceGolem") as UnitSprite;
			IceElemental.name = "Water Elemental";
			IceElemental.id = 217295;
			IceElemental.description = "UIceElemental";
			IceElemental.type = UnitTypes.Unit;
			IceElemental.xLength = 1;
			IceElemental.yLength = 1;
			IceElemental.isUpgrade = false;
			IceElemental.isFlying = false;
			IceElemental.isTrader = false;
			IceElemental.constructionTime = 1;
			IceElemental.properties[UnitProperties.Armor] = 2;
			IceElemental.properties[UnitProperties.ArmorType] = ArmorType.NORMAL;
			IceElemental.properties[UnitProperties.AttackDelay] = Util.secToFrames(3.8);
			IceElemental.properties[UnitProperties.AttackDmgMax] = 58;
			IceElemental.properties[UnitProperties.AttackDmgMin] = 47;
			IceElemental.properties[UnitProperties.AttackDmgType] = DamageType.Magic;
			IceElemental.properties[UnitProperties.AttackRange] = 6;
			IceElemental.properties[UnitProperties.AttackSpeed] = Util.secToFrames(1);
			IceElemental.properties[UnitProperties.AttackSpell] = 0;
			IceElemental.properties[UnitProperties.AttackVisualEffectId] = typesRepository.effectTypes.Sparks3.id;
			IceElemental.properties[UnitProperties.CastDelay] = 0;
			IceElemental.properties[UnitProperties.CastSpeed] = 0;
			IceElemental.properties[UnitProperties.IsMechanical] = 1;
			IceElemental.properties[UnitProperties.MagicRes] = 35;
			IceElemental.properties[UnitProperties.MaxHealth] = 720;
			IceElemental.properties[UnitProperties.MoveSpeed] = 18;
			IceElemental.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			IceElemental.properties[UnitProperties.ProjectileModelId] = Game.instance().spriteRepository.getByName("ProjectileIceShard1").id;
			IceElemental.properties[UnitProperties.ProjectileSpeed] = 3;
			IceElemental.properties[UnitProperties.SightRange] = 6;
			IceElemental.properties[UnitProperties.AttackDamageRange] = 0;
			IceElemental.properties[UnitProperties.HealthRegenRate] = Util.secToFrames(4);		
			IceElemental.properties[UnitProperties.HealthRegen] = 1;
			IceElemental.icon = new BitmapAsset(BitmapResources.icoIceGolem.bitmapData);
			IceElemental.soundPack.attack = SoundResources.swish1;
			IceElemental.soundPack.hit = SoundResources.magicHit9;
			game.unitManager.addUnitType(IceElemental);
			
			WatchTower = new UnitType(true);
			WatchTower.model = game.spriteRepository.getByName("BuildingTowerStone11") as UnitSprite;
			WatchTower.name = "Watch Tower";
			WatchTower.id = 222289;
			WatchTower.description = "UWatchTowerDesc";
			WatchTower.type = UnitTypes.Structure;
			WatchTower.xLength = 2;
			WatchTower.yLength = 2;
			WatchTower.isUpgrade = false;
			WatchTower.isFlying = false;
			WatchTower.isTrader = false;
			WatchTower.constructionTime = 48;
			WatchTower.properties[UnitProperties.Armor] = 3;
			WatchTower.properties[UnitProperties.ArmorType] = ArmorType.FORTIFIED;
			WatchTower.properties[UnitProperties.AttackDelay] = Util.secToFrames(0.85);
			WatchTower.properties[UnitProperties.AttackDmgMax] = 5;
			WatchTower.properties[UnitProperties.AttackDmgMin] = 3;
			WatchTower.properties[UnitProperties.AttackDmgType] = DamageType.Piersing;
			WatchTower.properties[UnitProperties.AttackRange] = 6;
			WatchTower.properties[UnitProperties.AttackSpeed] = Util.secToFrames(0.7);
			WatchTower.properties[UnitProperties.AttackVisualEffectId] = typesRepository.effectTypes.BloodLight.id;			
			WatchTower.properties[UnitProperties.CastDelay] = 48;
			WatchTower.properties[UnitProperties.CastSpeed] = 12;
			WatchTower.properties[UnitProperties.IsMechanical] = 1;
			WatchTower.properties[UnitProperties.MagicRes] = 100;
			WatchTower.properties[UnitProperties.MaxHealth] = 500;
			WatchTower.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			WatchTower.properties[UnitProperties.ProjectileModelId] = game.spriteRepository.getByName("ProjectileArrow").id;
			WatchTower.properties[UnitProperties.ProjectileSpeed] = 3;
			WatchTower.properties[UnitProperties.SightRange] = 6;
			WatchTower.properties[UnitProperties.AttackDamageRange] = 0;
			WatchTower.properties[UnitProperties.HealthRegenRate] = 24;
			WatchTower.properties[UnitProperties.HealthRegen] = 3;
			WatchTower.bountyResources[ResourceType.Gold] = 150;
			WatchTower.soundPack.attack = SoundResources.arrowShoot1;
			WatchTower.soundPack.hit = SoundResources.hitWet1;
			WatchTower.icon = new BitmapAsset(BitmapResources.icoTower11.bitmapData);
			game.unitManager.addUnitType(WatchTower);			
			
			MagicTower = new UnitType(true);
			MagicTower.model = game.spriteRepository.getByName("BuildingTowerStone8") as UnitSprite;
			MagicTower.name = "Magic Tower";
			MagicTower.id = 1187118;
			MagicTower.description = "UMagicTowerDesc";
			MagicTower.type = UnitTypes.Structure;
			MagicTower.xLength = 2;
			MagicTower.yLength = 2;
			MagicTower.isUpgrade = false;
			MagicTower.isFlying = false;
			MagicTower.isTrader = false;
			MagicTower.constructionTime = 384;
			MagicTower.properties[UnitProperties.Armor] = 7;
			MagicTower.properties[UnitProperties.ArmorType] = ArmorType.FORTIFIED;
			MagicTower.properties[UnitProperties.AttackDelay] = Util.secToFrames(0.9);
			MagicTower.properties[UnitProperties.AttackDmgMax] = 47;
			MagicTower.properties[UnitProperties.AttackDmgMin] = 70;
			MagicTower.properties[UnitProperties.AttackDmgType] = DamageType.Magic;
			MagicTower.properties[UnitProperties.AttackRange] = 7;
			MagicTower.properties[UnitProperties.AttackSpeed] = Util.secToFrames(0.75);
			MagicTower.properties[UnitProperties.AttackVisualEffectId] = typesRepository.effectTypes.Sparks2.id;
			MagicTower.properties[UnitProperties.CastDelay] = 48;
			MagicTower.properties[UnitProperties.CastSpeed] = 12;
			MagicTower.properties[UnitProperties.IsMechanical] = 1;
			MagicTower.properties[UnitProperties.MagicRes] = 100;
			MagicTower.properties[UnitProperties.MaxHealth] = 1500;
			MagicTower.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			MagicTower.properties[UnitProperties.ProjectileModelId] = 54575465;
			MagicTower.properties[UnitProperties.ProjectileSpeed] = 3;
			MagicTower.properties[UnitProperties.SightRange] = 7;
			MagicTower.properties[UnitProperties.AttackDamageRange] = 0;
			MagicTower.properties[UnitProperties.HealthRegenRate] = 24;
			MagicTower.properties[UnitProperties.HealthRegen] = 3;
			MagicTower.properties[ResourceType.Gold] = 250;
			MagicTower.soundPack.hit = SoundResources.magicHit5;
			MagicTower.soundPack.attack = SoundResources.magicShoot5;
			MagicTower.icon = new BitmapAsset(BitmapResources.icoTowerStone8.bitmapData);
			game.unitManager.addUnitType(MagicTower);
			
			ElementalTower = new UnitType(true);
			ElementalTower.model = game.spriteRepository.getByName("BuildingTowerStone5") as UnitSprite;
			ElementalTower.name = "Elemental Tower";
			ElementalTower.id = 2383981;
			ElementalTower.description = "UElementalTower";
			ElementalTower.type = UnitTypes.Structure;
			ElementalTower.xLength = 2;
			ElementalTower.yLength = 2;
			ElementalTower.isUpgrade = false;
			ElementalTower.isFlying = false;
			ElementalTower.isTrader = false;
			ElementalTower.constructionTime = 408;
			ElementalTower.properties[UnitProperties.Armor] = 7;
			ElementalTower.properties[UnitProperties.ArmorType] = ArmorType.FORTIFIED;
			ElementalTower.properties[UnitProperties.AstralRes] = 30;
			ElementalTower.properties[UnitProperties.AttackDelay] = Util.secToFrames(0.9);
			ElementalTower.properties[UnitProperties.AttackDmgMax] = 70;
			ElementalTower.properties[UnitProperties.AttackDmgMin] = 47;
			ElementalTower.properties[UnitProperties.AttackDmgType] = DamageType.Magic;
			ElementalTower.properties[UnitProperties.AttackRange] = 7;
			ElementalTower.properties[UnitProperties.AttackSpeed] = Util.secToFrames(0.75);
			ElementalTower.properties[UnitProperties.AttackSpell] = 0;
			ElementalTower.properties[UnitProperties.AttackVisualEffectId] = typesRepository.effectTypes.Sparks2Red.id;
			ElementalTower.properties[UnitProperties.CastDelay] = 48;
			ElementalTower.properties[UnitProperties.CastSpeed] = 12;
			ElementalTower.properties[UnitProperties.IsMechanical] = 1;
			ElementalTower.properties[UnitProperties.MagicRes] = 100;
			ElementalTower.properties[UnitProperties.MaxHealth] = 1500;
			ElementalTower.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			ElementalTower.properties[UnitProperties.ProjectileModelId] = game.spriteRepository.getByName("ProjectileFireArrow").id;
			ElementalTower.properties[UnitProperties.ProjectileSpeed] = 3;
			ElementalTower.properties[UnitProperties.SightRange] = 7;
			ElementalTower.properties[UnitProperties.AttackDamageRange] = 0;
			ElementalTower.bountyResources[ResourceType.Gold] = 250;
			ElementalTower.properties[UnitProperties.HealthRegenRate] = 22;
			ElementalTower.properties[UnitProperties.HealthRegen] = 3;
			ElementalTower.soundPack.hit = SoundResources.magicHit3;
			ElementalTower.soundPack.attack = SoundResources.magicShoot3;
			ElementalTower.icon = new BitmapAsset(BitmapResources.icoNexus.bitmapData);
			game.unitManager.addUnitType(ElementalTower);
			
			Fotress = new UnitType(true);
			Fotress.model = game.spriteRepository.getByName("BuildingCastle2") as UnitSprite;
			Fotress.name = "Fotress";
			Fotress.id = 14003;
			Fotress.description = " ";
			Fotress.type = UnitTypes.Structure;
			Fotress.xLength = 4;
			Fotress.yLength = 4;
			Fotress.isUpgrade = false;
			Fotress.isFlying = false;
			Fotress.isTrader = false;
			Fotress.constructionTime = 1;
			Fotress.properties[UnitProperties.Armor] = 5;
			Fotress.properties[UnitProperties.ArmorType] = ArmorType.FORTIFIED;
			Fotress.properties[UnitProperties.AstralRes] = 50;
			Fotress.properties[UnitProperties.AttackDelay] = 24;
			Fotress.properties[UnitProperties.AttackDmgMax] = 0;
			Fotress.properties[UnitProperties.AttackDmgMin] = 0;
			Fotress.properties[UnitProperties.AttackDmgType] = DamageType.Normal;
			Fotress.properties[UnitProperties.AttackRange] = 0;
			Fotress.properties[UnitProperties.AttackSpeed] = 12;
			Fotress.properties[UnitProperties.AttackSpell] = 0;
			Fotress.properties[UnitProperties.AttackVisualEffectId] = 0;
			Fotress.properties[UnitProperties.CastDelay] = 48;
			Fotress.properties[UnitProperties.CastSpeed] = 12;
			Fotress.properties[UnitProperties.IsMechanical] = 1;
			Fotress.properties[UnitProperties.MagicRes] = 100;
			Fotress.properties[UnitProperties.MaxHealth] = 5000;
			Fotress.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			Fotress.properties[UnitProperties.ProjectileModelId] = 0;
			Fotress.properties[UnitProperties.ProjectileSpeed] = 12;
			Fotress.properties[UnitProperties.SightRange] = 0;
			Fotress.properties[UnitProperties.AttackDamageRange] = 0;
			Fotress.properties[UnitProperties.HealthRegenRate] = 24;
			Fotress.properties[UnitProperties.HealthRegen] = 10;
			Fotress.icon = new BitmapAsset(BitmapResources.icoCastle2.bitmapData);			
			game.unitManager.addUnitType(Fotress);

			
			PillarofFrozenLight = new UnitType(true);
			PillarofFrozenLight.model = game.spriteRepository.getByName("BuildingPilar2") as UnitSprite;
			PillarofFrozenLight.name = "Pillar of Frozen Light";
			PillarofFrozenLight.id = 221595947;
			PillarofFrozenLight.description = "Has a 'Ray of Light' attack, does huge damage to undead and minor damage to all others. When second socket is activated can cast 'Water Jet'.";
			PillarofFrozenLight.type = UnitTypes.Structure;
			PillarofFrozenLight.xLength = 1;
			PillarofFrozenLight.yLength = 1;
			PillarofFrozenLight.isUpgrade = true;
			PillarofFrozenLight.isFlying = false;
			PillarofFrozenLight.isTrader = false;
			PillarofFrozenLight.constructionTime = 280;
			PillarofFrozenLight.properties[UnitProperties.Armor] = 2;
			PillarofFrozenLight.properties[UnitProperties.ArmorType] = ArmorType.FORTIFIED;
			PillarofFrozenLight.properties[UnitProperties.AstralRes] = 100;
			PillarofFrozenLight.properties[UnitProperties.AttackDelay] = 32;
			PillarofFrozenLight.properties[UnitProperties.AttackDmgMax] = 35;
			PillarofFrozenLight.properties[UnitProperties.AttackDmgMin] = 25;
			PillarofFrozenLight.properties[UnitProperties.AttackDmgType] = DamageType.Magic;
			PillarofFrozenLight.properties[UnitProperties.AttackRange] = 3;
			PillarofFrozenLight.properties[UnitProperties.AttackSpeed] = 32;
			PillarofFrozenLight.properties[UnitProperties.CastDelay] = 40;
			PillarofFrozenLight.properties[UnitProperties.CastSpeed] = 40;
			PillarofFrozenLight.properties[UnitProperties.IsMechanical] = 1;
			PillarofFrozenLight.properties[UnitProperties.MagicRes] = 100;
			PillarofFrozenLight.properties[UnitProperties.ManaRegenRate] = 30;
			PillarofFrozenLight.properties[UnitProperties.ManaRegen] = 7;
			PillarofFrozenLight.properties[UnitProperties.MaxHealth] = 300;
			PillarofFrozenLight.properties[UnitProperties.MaxMana] = 500;
			PillarofFrozenLight.properties[UnitProperties.MoveSpeed] = 36;
			PillarofFrozenLight.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			PillarofFrozenLight.properties[UnitProperties.ProjectileModelId] = game.spriteRepository.getByName("ProjectileFireArrow").id;
			PillarofFrozenLight.properties[UnitProperties.ProjectileSpeed] = 6;
			PillarofFrozenLight.properties[UnitProperties.SightRange] = 3;
			PillarofFrozenLight.properties[UnitProperties.AttackDamageRange] = 0;
			PillarofFrozenLight.costResources[ResourceType.Gold] = 55;
			PillarofFrozenLight.soundPack.hit = SoundResources.magicHit7;
			PillarofFrozenLight.soundPack.attack = SoundResources.magicShoot7;
			PillarofFrozenLight.icon = new BitmapAsset(BitmapResources.icoFirePilar.bitmapData);
			game.unitManager.addUnitType(PillarofFrozenLight);
			
			Merchant = new UnitType(true);
			Merchant.model = game.spriteRepository.getByName("BuildingStore") as UnitSprite;
			Merchant.name = "Stock Items Merchant";
			Merchant.id = 267234;
			Merchant.description = "UMerchantDesription";
			Merchant.type = UnitTypes.Structure;
			Merchant.xLength = 2;
			Merchant.yLength = 2;
			Merchant.isUpgrade = false;
			Merchant.isFlying = false;
			Merchant.isTrader = true;
			Merchant.constructionTime = 1;
			Merchant.properties[UnitProperties.ArmorType] = ArmorType.DIVINE;
			Merchant.properties[UnitProperties.AttackDelay] = 24;
			Merchant.properties[UnitProperties.AttackDmgType] = DamageType.Normal;
			Merchant.properties[UnitProperties.AttackRange] = 0;
			Merchant.properties[UnitProperties.AttackSpeed] = 12;
			Merchant.properties[UnitProperties.AttackSpell] = 0;
			Merchant.properties[UnitProperties.AttackVisualEffectId] = 0;
			Merchant.properties[UnitProperties.CastDelay] = 48;
			Merchant.properties[UnitProperties.CastSpeed] = 12;
			Merchant.properties[UnitProperties.IsMechanical] = 1;
			Merchant.properties[UnitProperties.MaxHealth] = 700;
			Merchant.properties[UnitProperties.MoveSpeed] = 40;
			Merchant.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			Merchant.properties[UnitProperties.ProjectileModelId] = 0;
			Merchant.properties[UnitProperties.ProjectileSpeed] = 12;
			Merchant.properties[UnitProperties.SightRange] = 0;
			Merchant.properties[UnitProperties.AttackDamageRange] = 0;
			Merchant.icon = new BitmapAsset(BitmapResources.icoItemCoin.bitmapData);
			Merchant.soundPack.what = SoundResources.trader;			
			game.unitManager.addUnitType(Merchant);
			
			Totem = new UnitType(true);
			Totem.model = game.spriteRepository.getByName("UnitTotem") as UnitSprite;
			Totem.name = "Totem";
			Totem.id = 5512318;
			Totem.type = UnitTypes.Unit;
			Totem.xLength = 1;
			Totem.yLength = 1;
			Totem.isUpgrade = false;
			Totem.isFlying = false;
			Totem.isTrader = false;
			Totem.constructionTime = 1;
			Totem.properties[UnitProperties.Armor] = 1;
			Totem.properties[UnitProperties.ArmorType] = ArmorType.NONE;
			Totem.properties[UnitProperties.AttackDelay] = Util.secToFrames(1.5);
			Totem.properties[UnitProperties.AttackDmgMax] = 24;
			Totem.properties[UnitProperties.AttackDmgMin] = 21;
			Totem.properties[UnitProperties.AttackDmgType] = DamageType.Magic;
			Totem.properties[UnitProperties.AttackRange] = 6;
			Totem.properties[UnitProperties.AttackSpeed] = Util.secToFrames(0.8);
			Totem.properties[UnitProperties.AttackSpell] = 0;
			Totem.properties[UnitProperties.AttackVisualEffectId] = 0;
			Totem.properties[UnitProperties.CastDelay] = 48;
			Totem.properties[UnitProperties.CastSpeed] = 12;
			Totem.properties[UnitProperties.CanMove] = 0;			
			Totem.properties[UnitProperties.IsMechanical] = 1;
			Totem.properties[UnitProperties.MaxHealth] = 220;
			Totem.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			Totem.properties[UnitProperties.ProjectileModelId] = game.spriteRepository.getByName("ProjectileFireArrow").id;
			Totem.properties[UnitProperties.ProjectileSpeed] = 2;
			Totem.properties[UnitProperties.SightRange] = 6;		
			Totem.properties[UnitProperties.HealthRegen] = 0;
			Totem.properties[UnitProperties.AttackDamageRange] = 0;
			Totem.bountyResources[ResourceType.Gold] = 5;
			Totem.soundPack.attack = SoundResources.magicHit6;
			Totem.icon = new BitmapAsset(BitmapResources.icoTotem.bitmapData);
			game.unitManager.addUnitType(Totem);

			TotemLvl2 = new UnitType(true);
			TotemLvl2.model = game.spriteRepository.getByName("UnitTotemLvl2") as UnitSprite;
			TotemLvl2.name = "Totem (2)";
			TotemLvl2.id = 56512318;
			TotemLvl2.type = UnitTypes.Unit;
			TotemLvl2.xLength = 1;
			TotemLvl2.yLength = 1;
			TotemLvl2.isUpgrade = false;
			TotemLvl2.isFlying = false;
			TotemLvl2.isTrader = false;
			TotemLvl2.constructionTime = 1;
			TotemLvl2.properties[UnitProperties.Armor] = 2;
			TotemLvl2.properties[UnitProperties.ArmorType] = ArmorType.NONE;
			TotemLvl2.properties[UnitProperties.AttackDelay] = Util.secToFrames(1.5);
			TotemLvl2.properties[UnitProperties.AttackDmgMax] = 31;
			TotemLvl2.properties[UnitProperties.AttackDmgMin] = 25;
			TotemLvl2.properties[UnitProperties.AttackDmgType] = DamageType.Magic;
			TotemLvl2.properties[UnitProperties.AttackRange] = 6;
			TotemLvl2.properties[UnitProperties.AttackSpeed] = Util.secToFrames(0.8);
			TotemLvl2.properties[UnitProperties.AttackSpell] = 0;
			TotemLvl2.properties[UnitProperties.AttackVisualEffectId] = 0;
			TotemLvl2.properties[UnitProperties.CastDelay] = Util.secToFrames(0.3);
			TotemLvl2.properties[UnitProperties.CastSpeed] = Util.secToFrames(0.2);
			TotemLvl2.properties[UnitProperties.CanMove] = 0;			
			TotemLvl2.properties[UnitProperties.IsMechanical] = 1;
			TotemLvl2.properties[UnitProperties.MagicRes] = 100;			
			TotemLvl2.properties[UnitProperties.MaxHealth] = 360;
			TotemLvl2.properties[UnitProperties.MaxMana] = 100;			
			TotemLvl2.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			TotemLvl2.properties[UnitProperties.ProjectileModelId] = game.spriteRepository.getByName("ProjectileFireArrow").id;
			TotemLvl2.properties[UnitProperties.ProjectileSpeed] = 2;
			TotemLvl2.properties[UnitProperties.SightRange] = 6;		
			TotemLvl2.properties[UnitProperties.HealthRegen] = 0;
			TotemLvl2.properties[UnitProperties.ManaRegen] = 2;	
			TotemLvl2.properties[UnitProperties.ManaRegenRate] = Util.secToFrames(1);		
			TotemLvl2.properties[UnitProperties.AttackDamageRange] = 0;
			TotemLvl2.bountyResources[ResourceType.Gold] = 5;
			TotemLvl2.soundPack.attack = SoundResources.magicHit6;
			TotemLvl2.soundPack.death = SoundResources.magicHit7;			
			TotemLvl2.icon = new BitmapAsset(BitmapResources.icoTotem.bitmapData);
			game.unitManager.addUnitType(TotemLvl2);
			
			MagicTotem = new UnitType(true);
			MagicTotem.model = game.spriteRepository.getByName("UnitTotem") as UnitSprite;
			MagicTotem.name = "Magic Totem";
			MagicTotem.id = 5152318;
			MagicTotem.type = UnitTypes.Unit;
			MagicTotem.xLength = 1;
			MagicTotem.yLength = 1;
			MagicTotem.isUpgrade = false;
			MagicTotem.isFlying = false;
			MagicTotem.isTrader = false;
			MagicTotem.constructionTime = 1;
			MagicTotem.properties[UnitProperties.Armor] = 1;
			MagicTotem.properties[UnitProperties.ArmorType] = ArmorType.DIVINE;
			MagicTotem.properties[UnitProperties.AttackDelay] = Util.secToFrames(2.5);
			MagicTotem.properties[UnitProperties.AttackDmgMax] = 24;
			MagicTotem.properties[UnitProperties.AttackDmgMin] = 21;
			MagicTotem.properties[UnitProperties.AttackDmgType] = DamageType.Magic;
			MagicTotem.properties[UnitProperties.AttackRange] = 0;
			MagicTotem.properties[UnitProperties.AttackSpeed] = Util.secToFrames(0.8);
			MagicTotem.properties[UnitProperties.AttackSpell] = 0;
			MagicTotem.properties[UnitProperties.AttackVisualEffectId] = 0;
			MagicTotem.properties[UnitProperties.CastDelay] = 48;
			MagicTotem.properties[UnitProperties.CastSpeed] = 12;
			MagicTotem.properties[UnitProperties.CanMove] = 0;			
			MagicTotem.properties[UnitProperties.IsMechanical] = 1;
			MagicTotem.properties[UnitProperties.MaxHealth] = 200;
			MagicTotem.properties[UnitProperties.ProjectileBehaviour] = ProjectileBehaviour.SNAP_TO_TARGET;
			MagicTotem.properties[UnitProperties.ProjectileModelId] = 81184585;
			MagicTotem.properties[UnitProperties.ProjectileSpeed] = 2;
			MagicTotem.properties[UnitProperties.SightRange] = 0;		
			MagicTotem.properties[UnitProperties.HealthRegen] = 0;
			MagicTotem.properties[UnitProperties.AttackDamageRange] = 0;
			MagicTotem.bountyResources[ResourceType.Gold] = 5;
			MagicTotem.icon = new BitmapAsset(BitmapResources.icoTotem.bitmapData);
			game.unitManager.addUnitType(MagicTotem);
									
			defineBuildLists(game, typesRepository);
			defineDependencies(game, typesRepository);
			defineUpgradeLists(game, typesRepository);
		}

		public function initUnitSpells(game:Game, typesRepository:TypesRepository):void 
		{
			FountainofLife.spellList.push(typesRepository.spellTypes.poolRegenerationAuraLvl1);
		}

		public function defineBuildLists(game:Game, typesRepository:TypesRepository):void 
		{
		}


		public function defineDependencies(game:Game, typesRepository:TypesRepository):void 
		{
		}


		public function defineUpgradeLists(game:Game, typesRepository:TypesRepository):void 
		{
		}

	}
}